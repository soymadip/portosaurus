name: Deploy to GitHub Pages

on:
  push:
    branches:
      - content
  schedule:
    - cron: "0 4,12,20 * * *"
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even without version changes'
        required: false
        default: true
        type: boolean

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Restore Cached Version Info
        id: restore-cache
        uses: actions/cache@v4
        with:
          path: .upstream-cache
          key: portosaurus-version-${{ github.run_id }}
          restore-keys: |
            portosaurus-version-

      - name: Fetch & Compare Version
        id: check
        run: |
          # Check if force_deploy is enabled
          if [[ "${{ github.event.inputs.force_deploy }}" == "true" ]]; then
            echo "Force deployment requested!"
            echo "changed=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          mkdir -p .upstream-cache

          curl -s https://raw.githubusercontent.com/soymadip/portosaurus/main/package.json \
            | jq -r .version > .upstream-cache/upstream_version.txt

          latest=$(cat .upstream-cache/upstream_version.txt)

          echo "Latest version: $latest"

          if [ -f .upstream-cache/last-version.txt ]; then

            stored=$(cat .upstream-cache/last-version.txt)
            echo "Stored version: $stored"

            if [ "$latest" = "$stored" ]; then
              echo "No version change detected."
              echo "changed=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          else
            echo "No previous version stored."
          fi

          echo "Version changed!"
          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Copy New Version Info
        if: steps.check.outputs.changed == 'true'
        run: cp .upstream-cache/upstream_version.txt .upstream-cache/last-version.txt

      - name: Save Version Cache
        if: steps.check.outputs.changed == 'true'
        uses: actions/cache/save@v4
        with:
          path: .upstream-cache
          key: portosaurus-version-${{ github.run_id }}

  deploy:
    needs: update-check
    if: needs.update-check.outputs.changed == 'true'
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Compile Docs
        run: bash ./.github/compile.sh

      - name: Upload Build Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

      - name: Check GitHub Pages status
        run: |
          echo "Checking if GitHub Pages is enabled for this repository..."

          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/pages | jq .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: false
        env:
          # Enable debug logging
          DEBUG: "actions-deploy-pages:*"