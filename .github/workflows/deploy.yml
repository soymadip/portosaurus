name: Deploy to GitHub Pages

on:
  push:
    branches:
      - content
  schedule:
    - cron: "0 4,12,20 * * *"
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Force deployment: Skip upstream checks"
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  update-check:
    runs-on: ubuntu-latest
    if: github.repository != 'soymadip/portosaurus'
    outputs:
      upstream_updated: ${{ steps.check-update.outputs.upstream_updated }}
      upstream_version: ${{ steps.check-update.outputs.upstream_version }}
      local_version: ${{ steps.check-update.outputs.local_version }}
      dummy_version: ${{ steps.check-update.outputs.dummy_version }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Fetch & Check Upstream for Updates
        id: check-update
        run: bash .github/scripts/check-update.sh
        env:
          _FORCE_DEPLOY: ${{ github.event.inputs.force_deploy }}
          _GITHUB_EVENT_NAME: ${{ github.event_name }}
          _GITHUB_REF_NAME: ${{ github.ref_name }}

  deploy:
    needs: update-check
    if: needs.update-check.outputs.upstream_updated == 'true'
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Update Compiler Scripts
        if: github.repository != 'soymadip/tests'
        run: bash .github/scripts/update-compiler.sh

      - name: compile Content
        run: bash .github/scripts/compile.sh
        env:
          _REPO_NAME: ${{ github.event.repository.name }}
          _REPO_OWNER: ${{ github.repository_owner }}

      - name: Upload Github Page Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/

      - name: Upload upstream artifact
        uses: actions/upload-artifact@v4
        with:
          name: upstream
          path: .github/
          include-hidden-files: true
          if-no-files-found: error

      - name: Check GitHub Pages status
        id: pages_check
        run: bash .github/scripts/check-gh-pages-status.sh

      - name: Deploy to GitHub Pages
        if: steps.pages_check.outputs.pages_enabled != 'false'
        id: deployment
        uses: actions/deploy-pages@v4

  update-repo:
    needs: [update-check, deploy]
    if: needs.update-check.outputs.upstream_updated == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: upstream 
          path: .upstream/

      - name: Check file changes
        id: files-changed
        run: bash .github/scripts/check-file-changes.sh --dir ".upstream"

      - name: Check Version change
        id: version-changed
        run: bash .github/scripts/check-version-changes.sh
        env:
          _HAS_UPDATE: ${{ needs.update-check.outputs.upstream_updated }}
          _LATEST_VERSION: ${{ needs.update-check.outputs.upstream_version }}
          _LOCAL_VERSION:  ${{ needs.update-check.outputs.local_version }}
          _DUMMY_VERSION: ${{ needs.update-check.outputs.dummy_version }}

      - name: Commit & Push Changes
        if: steps.files-changed.outputs.changed == 'true' || steps.version-changed.outputs.changed == 'true'
        run: bash .github/scripts/commit-push-change.sh
        env:
          _GITHUB_ACTOR: ${{ github.actor }}
          _REPO_OWNER: ${{ github.repository_owner }}
